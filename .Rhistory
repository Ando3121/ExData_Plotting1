library(Swirl)
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c()
?c
z
z 555 z
z + 555 + z
c(z, 55,z)
c(z,555 ,z)
z
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(1,10)
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10, 100)
(z * 2 + 100)
(z * 2 + 1000)
z*2+1000
my_div
1:20
pi:10
15:1
?:
?`:`
seq(1,20)
seq(0,12,by=).5
seq(0,12,by=0.5)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
my_seq
length(my_seq)
1:length(my_seq)
seq(1,my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(=0,times = 40)
rep(0,times = 40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
swirl()
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
`kl;
;
d
=
load("~/Documents/Career Development/Kaggle/Titanic - Machine Learning from Disaster/genderclassmodel.csv")
system.time(x <- matrix(runif(1e8), nc = 1e4))
x <- list(a=1:4,b = rnorm(10))
x
lapply(x,mean)
x <- 1:4
lapply(x,runif)
lapply(5,runif)
genderclassmodel <- read.csv("~/Documents/Career Development/Kaggle/Titanic - Machine Learning from Disaster/genderclassmodel.csv")
View(genderclassmodel)
View(genderclassmodel)
View(genderclassmodel)
lapply(genderclassmodel$passengerid,mean)
a <- c(1,2,5.3,6,-2,4)
a
y<-matrix(1:20, nrow=5,ncol=4)
y
cells <- c(1,26,24,68)
CELLS
cells
rnames <- c("R1", "R2")
rnames
cnames <- c("C1", "C2")
cnames
mymatrix <- matrix(cells, nrow=2, ncol=2, byrow=TRUE,
dimnames=list(rnames, cnames))
mymatrix
w <- list(name="Fred", mynumbers=a, mymatrix=y, age=5.3)
w
genderclassmodel
x<-matrxi(rnorm(200),20,10)
x<-matrix(rnorm(200),20,10)
matrix
x
apply(x,2,mean)
apply(x,1,mean)
apply(x,1,sum)
apply(x,2,sum)
rowsums(x)
rowSums(x)
apply(x,2,sum)
colSums(x)
apply(x,2,quantile, probs = c(0.25,0.75))
a <- array(rnorm(2 * 2 * 10), c(2,2,100)
a <- array(rnorm(2 * 2 * 10), c(2,2,100)
a <- array(rnorm(2 * 2 * 10), c(2,2,10)
a <- array(rnorm(2 * 2 * 10), c(2,2,10)
library(datasets)
with(airquality,plot(wind,ozone))
with(airquality,plot(Wind,Ozone))
with(genderclassmodel,plot(PassengerId,Survived))
with(airquality,plot(Wind,Ozone))
airquality <- transform(airquality, Month=factor(Month))
airquality
with(airquality,plot(Wind,Ozone))
with(airquality,plot(Wind,Ozone),pch=x)
with(airquality,plot(Wind,Ozone),pch='x')
with(airquality,plot(Wind,Ozone),pch='x')
with(airquality,plot(Wind,Ozone),pch="x")
with(airquality,plot(Wind,Ozone),pch=1)
with(airquality,plot(Wind,Ozone,pch=2))
with(airquality,plot(Wind,Ozone,bg=2))
with(airquality,plot(Wind,Ozone, title = "test"))
with(airquality,plot(Wind,Ozone,main = "Test")
fds
with(airquality,plot(Wind,Ozone,main = "Test"))
with(subset(airquality, Month==5),points(Wind, Ozone, col = "blue"))
with(subset(airquality, Month==5),points(Wind, Ozone, col = "blue"))
with(airquality,plot(Wind,Ozone,main = "Test"))
with(airquality,plot(Wind,Ozone,main = "Test", type = "n"))
with(airquality,plot(Wind,Ozone,main = "Test"))
hist(x)
hist(y)
hist(x)
plot(x,y)
hist(x)
points
example(points)
x <- rnorm(100)
y <- rnorm(100)
g <- gl(2, labels = c("male", "female"))
g <- gl(2, 50, labels = c("male", "female"))
plot(x,y)
plot(x,y,type=n)
plot(x,y,type="n")
points(x[g == "male"], y[g == "male"], col = "Green")
points(x[g == "female"], y[g == "female"], col = "Blue")
points(x[g == "female"], y[g == "female"], col = "Blue", pch = 4)
pdf(file="testplot.pdf")
dev.off()
pdf(file="testplot.pdf")
with(plot(x,y))
plot(x,y)
dev.off()
dev.cur()
dev.off()
dev.cur()
household_power_consumption <- read.csv("~/Documents/Career Development/Coursera/Exploratory Data Analysis/household_power_consumption.txt", sep=";")
View(household_power_consumption)
View(household_power_consumption)
View(household_power_consumption)
View(household_power_consumption)
household_power_consumption.date <- 1
View(household_power_consumption)
household_power_consumption <- read.csv("~/Documents/Career Development/Coursera/Exploratory Data Analysis/household_power_consumption.txt", sep=";")
View(household_power_consumption)
household_power_consumption.date2 <- as.date(household_power_consumption.date)
library(base)
install.packages("base")
install.packages("base")
install.packages("base")
install.packages("base")
install.packages("base")
household_power_consumption.date2 <- as.Date(household_power_consumption.date)
household_power_consumption.date2 <- as.Date(household_power_consumption.date, origin = "1899-12-30")
View(household_power_consumption)
household_power_consumption$date2 <- as.Date(household_power_consumption$date, origin = "1899-12-30")
household_power_consumption$date2 <- as.Date(household_power_consumption$date, "%d%b%y")
household_power_consumption$date2 <- as.Date(household_power_consumption$date, format = "%d/%b/%y")
household_power_consumption$date2 <- as.Date(household_power_consumption$date, format = "%d/%b/%y"))
household_power_consumption$date2 <- as.Date(household_power_consumption$date, format = "%d/%m/%y")
powersubset <- subset(household_power_consumption, Date = "18/12/2006")
View(powersubset)
View(powersubset)
View(powersubset)
powersubset <- subset(household_power_consumption, Date == "18/12/2006")
View(powersubset)
powersubset <- subset(household_power_consumption, Date in ("18/12/2006", "19/12/2006")
powersubset <- subset(household_power_consumption, Date %in% ("18/12/2006", "19/12/2006")
powersubset <- subset(household_power_consumption, ! Date %in% ("18/12/2006", "19/12/2006")
dates <- c("18/12/2006", "19/12/2006")
powersubset <- subset(household_power_consumption, Date == dates)
View(powersubset)
powersubset <- subset(household_power_consumption, Date == "19/12/2006")
View(powersubset)
powersubset <- subset(household_power_consumption, Date == "18/12/2006")
View(powersubset)
View(powersubset)
View(powersubset)
powersubset <- subset(household_power_consumption, Date == dates)
View(powersubset)
dates <- c("01/02/2007", "02/02/2007")
powersubset <- subset(household_power_consumption, Date == dates)
View(powersubset)
powersubset <- subset(household_power_consumption, Date == "01/02/2007")
dates <- c("1/2/2007", "2/2/2007")
powersubset <- subset(household_power_consumption, Date == dates)
View(powersubset)
powersubset.Date2 <- as.Date(powersubset.Date, formate = "%d/%m/%Y")
powersubset$Date2 <- as.Date(powersubset$Date, formate = "%d/%m/%Y")
View(powersubset)
powersubset$Date2 <- as.Date(powersubset$Date, formate = "%d/%b/%Y")
View(powersubset)
test <- sys.date
test <- sys.Date
test <- Sys.Date
test
testdate <- c("1/2/2007")
testdate2 <- as.Date(testdate, formate = "%d/%b/%Y")
testdate2 <- as.Date(testdate, formate = "%d/%m/%Y")
testdate2 <- as.Date(testdate, formate = "%d%m%Y")
testdate2
x = c("1jan1960", "2jan1960")
z = as.Date(x,"%d%b%Y")
x = c("1/2/2007", "2/2/2007")
z = as.Date(x,"%d%m%Y")
z
z = as.Date(x,"%d/%m/%Y")
powersubset$Date3 <- as.Date(powersubset$Date, "%d/%m/%Y")
View(powersubset)
household_power_consumption$Date <- as.Date(Date, "%d/%m/%Y")
household_power_consumption$Date <- as.Date(household_power_consumption$Date, "%d/%m/%Y")
View(household_power_consumption)
View(household_power_consumption)
View(household_power_consumption)
View(household_power_consumption)
household_power_consumption$Time2 <- strptime(household_power_consumption$Time, "%H:%M:%S)
d
dsw
%H:%M:%S"
household_power_consumption$Time2 <- strptime(household_power_consumption$Time, "%H:%M:%S)
^L
workset <- subset(household_power_consumption, Date >= "2007-02-01" & Date <= "2007-02-02")
View(workset)
hist(workset$Global_active_power)
hist(as.numeric(workset$Global_active_power))
View(workset)
View(household_power_consumption)
workset$gap <- as.numeric(workset$Global_active_power)
View(workset)
household_power_consumption2 <- read.csv("~/Documents/Career Development/Coursera/Exploratory Data Analysis/household_power_consumption.txt", sep=";", stringsAsFactors=FALSE)
View(household_power_consumption2)
View(household_power_consumption2)
household_power_consumption2$Date <- as.Date(household_power_consumption2$Date, "%d/%m/%Y")
View(household_power_consumption2)
household_power_consumption <- read.csv("~/Documents/Career Development/Coursera/Exploratory Data Analysis/household_power_consumption.txt", sep=";", stringsAsFactors=FALSE)
household_power_consumption$Date <- as.Date(household_power_consumption$Date, "%d/%m/%Y")
workset <- subset(household_power_consumption, Date >= "2007-02-01" & Date <= "2007-02-02")
Global_active_power <- as.Numeric(Global.active_power)
workset$Global_active_power <- as.numeric(workset$Global.active_power)
View(workset)
hist(as.numeric(workset$Global_active_power))
hist(as.numeric(workset$Global_active_power), col = "Red")
hist(as.numeric(workset$Global_active_power), col = "Red", xlab = "Global Active Power (kilowatts")
hist(as.numeric(workset$Global_active_power), col = "Red", xlab = "Global Active Power (kilowatts)")
hist(as.numeric(workset$Global_active_power), col = "Red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
hist(as.numeric(workset$Global_active_power), col = "Red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", ylim= c(1200))
hist(as.numeric(workset$Global_active_power), col = "Red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", ylim= c(0,1200))
hist(as.numeric(workset$Global_active_power), col = "Red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", ylim= c(0,1200), cex.axis = 1.5)
hist(as.numeric(workset$Global_active_power), col = "Red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", ylim= c(0,1200), cex.axis = 0.5)
hist(as.numeric(workset$Global_active_power), col = "Red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", ylim= c(0,1200), cex.axis = 0.7)
hist(as.numeric(workset$Global_active_power), col = "Red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", ylim= c(0,1200), cex.axis = 0.6)
hist(as.numeric(workset$Global_active_power), col = "Red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", ylim= c(0,1200), cex.axis = 0.6, cex.lab = .5)
hist(as.numeric(workset$Global_active_power), col = "Red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", ylim= c(0,1200), cex.axis = 0.6, cex.lab = 1)
hist(as.numeric(workset$Global_active_power), col = "Red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", ylim= c(0,1200), cex.axis = 0.6, cex.lab = .7)
hist(as.numeric(workset$Global_active_power), col = "Red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", ylim= c(0,1200), cex.axis = 0.6, cex.lab = .7)
weekday <- weekdays(workset$Date)
workset$weekday <- weekdays(workset$Date)
View(workset)
plot(weekday, Global, active_power, type = "n", ylab = "Global Active Power (kilowatts)")
plot(weekday, Global_active_power, type = "n", ylab = "Global Active Power (kilowatts)")
plot(workset$weekday, workset$Global_active_power, type = "n", ylab = "Global Active Power (kilowatts)")
lines(workset$weekday, workset$Global_active_power, type = "n", ylab = "Global Active Power (kilowatts)")
lines(workset$weekday, as.numeric(workset$Global_active_power), type = "n", ylab = "Global Active Power (kilowatts)")
lines(workset$weekday, as.numeric(workset$Global_active_power))
plot(workset$weekday, as.numeric(workset$Global_active_power))
hist(workset$weekday, as.numeric(workset$Global_active_power))
plot(workset$Date, as.numeric(workset$Global_active_power))
View(workset)
household_power_consumption$Time1 <- strptime(household_power_consumption$Time1, "%H:%M:%S" )
household_power_consumption$Time1 <- strptime(household_power_consumption$Time, "%H:%M:%S" )
View(household_power_consumption)
household_power_consumption$DateTime <- as.POSIXct(paste(data$Date, data$Time), format="%d/%m/%Y %H:%M:%S")
household_power_consumption <- read.csv("~/Documents/Career Development/Coursera/Exploratory Data Analysis/household_power_consumption.txt", sep=";", stringsAsFactors=FALSE)
household_power_consumption <- read.csv("~/Documents/Career Development/Coursera/Exploratory Data Analysis/household_power_consumption.txt", sep=";", stringsAsFactors=FALSE)
data$DateTime <- as.POSIXct(paste(data$Date, data$Time), format="%d/%m/%Y %H:%M:%S")
> household_power_consumption$DateTime <- as.POSIXct(paste(> household_power_consumption$Date, > household_power_consumption$Time), format="%d/%m/%Y %H:%M:%S")
> household_power_consumption$DateTime <- as.POSIXct(paste(> household_power_consumption$Date, household_power_consumption$Time), format="%d/%m/%Y %H:%M:%S")
> household_power_consumption$DateTime <- as.POSIXct(paste(household_power_consumption$Date, household_power_consumption$Time), format="%d/%m/%Y %H:%M:%S")
household_power_consumption$DateTime <- as.POSIXct(paste(household_power_consumption$Date, household_power_consumption$Time), format="%d/%m/%Y %H:%M:%S")
household_power_consumption$DateTime <- as.POSIXct(paste(household_power_consumption$Date, household_power_consumption$Time), format="%d/%m/%Y %H:%M:%S")
household_power_consumption$Date <- as.Date(household_power_consumption$Date, "%d/%m/%Y")
dsa
household_power_consumption$Date <- as.Date(household_power_consumption$Date, "%d/%m/%Y")
workset <- subset(household_power_consumption, Date >= "2007-02-01" & Date <= "2007-02-02")
workset$weekday <- weekdays(workset$Date)
(workset$DateTime, as.numeric(workset$Global_active_power), type = "n", ylab = "Global Active Power (kilowatts)")
plot(workset$DateTime, as.numeric(workset$Global_active_power), type = "n", ylab = "Global Active Power (kilowatts)")
plot(workset$DateTime, as.numeric(workset$Global_active_power), type = "n", ylab = "Global Active Power (kilowatts)", xlab = "")
plot(workset$DateTime, as.numeric(workset$Global_active_power), type = "n", ylab = "Global Active Power (kilowatts)", xlab = "", cex.axis = 0.6, cex.lab = .7)
plot(workset$DateTime, as.numeric(workset$Global_active_power), type = "n", ylab = "Global Active Power (kilowatts)", xlab = "", cex.axis = 0.6, cex.lab = .7)
plot(workset$DateTime, as.numeric(workset$Global_active_power), type = "n", ylab = "Global Active Power (kilowatts)", xlab = "", cex.axis = 0.8, cex.lab = .7)
lines(workset$DateTime, as.numeric(workset$Global_active_power))
View(household_power_consumption)
View(workset)
plot(workset$DateTime, as.numeric(workset$Sub_metering_1), type = "n", ylab = "Global Active Power (kilowatts)", xlab = "", cex.axis = 0.8, cex.lab = .7)
lines(workset$DateTime, as.numeric(workset$Sub_metering_1))
lines(workset$DateTime, as.numeric(workset$Sub_metering_2))
lines(workset$DateTime, as.numeric(workset$Sub_metering_3))
plot(workset$DateTime, as.numeric(workset$Sub_metering_1), type = "n", ylab = "Global Active Power (kilowatts)", xlab = "", cex.axis = 0.8, cex.lab = .7)
lines(workset$DateTime, as.numeric(workset$Sub_metering_1))
lines(workset$DateTime, as.numeric(workset$Sub_metering_2), col = "blue")
lines(workset$DateTime, as.numeric(workset$Sub_metering_2), col = "red")
lines(workset$DateTime, as.numeric(workset$Sub_metering_3), col = "blue")
legend("topright",  names(a)[-1] ,
lty=1, col=c('black', 'red', 'blue), bty='n', cex=.75)
legend("topright",  names(a)[-1] ,
lty=1, col=c('black', 'red', 'blue))
legend("topright",  names(a)[-1] ,
lty=1, col=c('black', 'red', 'blue))
legend("topright")
legend("topright", legend = "Data")
legend("topright", ("sample","control"),cex=.8,
col=c("black","blue"))
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),cex=.8,
col=c("black","red", "blue"))
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),cex=.8,
col=c("black","red", "blue"), pch=c(1,1,1))
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),cex=.8,
col=c("black","red", "blue"), pch=c(-,-,-))
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),cex=.8,
col=c("black","red", "blue"), pch=c(1,1,1))
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),cex=.8,
col=c("black","red", "blue"), pch=c(1,2,3))
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),cex=.8,
col=c("black","red", "blue"), bty='n')
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),cex=.8,
col=c("black","red", "blue"), lty=1)
plot(workset$DateTime, as.numeric(workset$Global_active_power), type = "n", ylab = "Energy sub metering", xlab = "", cex.axis = 0.8, cex.lab = .7)
lines(workset$DateTime, as.numeric(workset$Sub_metering_1), col = "black")
lines(workset$DateTime, as.numeric(workset$Sub_metering_2), col = "red")
lines(workset$DateTime, as.numeric(workset$Sub_metering_3), col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),cex=.8,
col=c("black","red", "blue"), lty=1)
plot(workset$DateTime, as.numeric(workset$Sub_metering_1), type = "n", ylab = "Energy sub metering", xlab = "", cex.axis = 0.8, cex.lab = .7)
lines(workset$DateTime, as.numeric(workset$Sub_metering_1), col = "black")
lines(workset$DateTime, as.numeric(workset$Sub_metering_2), col = "red")
lines(workset$DateTime, as.numeric(workset$Sub_metering_3), col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),cex=.8, col=c("black","red", "blue"), lty=1)
par(mfrow = c(2,2))
par(mfrow = c(2,2))
hist(as.numeric(workset$Global_active_power), col = "Red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", ylim= c(0,1200), cex.axis = 0.6, cex.lab = .7)
par(mfrow = c(2,2))
plot(workset$DateTime, as.numeric(workset$Global_active_power), type = "n", ylab = "Global Active Power (kilowatts)", xlab = "", cex.axis = 0.8, cex.lab = .7)
lines(workset$DateTime, as.numeric(workset$Global_active_power))
plot(workset$DateTime, as.numeric(workset$Voltage), type = "n", ylab = "Voltage", xlab = "datetime", cex.axis = 0.8, cex.lab = .7)
lines(workset$DateTime, as.numeric(workset$Voltage))
plot(workset$DateTime, as.numeric(workset$Sub_metering_1), type = "n", ylab = "Energy sub metering", xlab = "", cex.axis = 0.8, cex.lab = .7)
lines(workset$DateTime, as.numeric(workset$Sub_metering_1), col = "black")
lines(workset$DateTime, as.numeric(workset$Sub_metering_2), col = "red")
lines(workset$DateTime, as.numeric(workset$Sub_metering_3), col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),cex=.8, col=c("black","red", "blue"), lty=1)
plot(workset$DateTime, as.numeric(workset$Global_reactive_power), type = "n", ylab = "Global Active Power (kilowatts)", xlab = "", cex.axis = 0.8, cex.lab = .7)
lines(workset$DateTime, as.numeric(workset$Global_reactive_power))
png(file = "myplot.png")
dev.off()
dev.off()
hist(as.numeric(workset$Global_active_power), col = "Red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", ylim= c(0,1200), cex.axis = 0.6, cex.lab = .7)
png(file = "Plot1.png")
plot(1:10)
rect(1, 5, 3, 7, col = "white")
dev.off()
png(file = "Plot1.png")
plot(1)
dev.off()
png(file = "Plot1.png")
hist(as.numeric(workset$Global_active_power), col = "Red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", ylim= c(0,1200), cex.axis = 0.6, cex.lab = .7)
dev.off()
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp)
data <- read.table(unz(temp, "a1.dat"))
unlink(temp)
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp)
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp, method="curl")
data <- read.table(unz(temp, "a1.dat"))
setwd("~/ExData_Plotting1")
png(file = "Plot1.png")
hist(as.numeric(workset$Global_active_power), col = "Red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", ylim= c(0,1200), cex.axis = 0.6, cex.lab = .7)
dev.off()
## Import Data
household_power_consumption <- read.csv("~/ExData_Plotting1/household_power_consumption.txt", sep=";", stringsAsFactors=FALSE)
## Create datetime
household_power_consumption$DateTime <- as.POSIXct(paste(household_power_consumption$Date, household_power_consumption$Time), format="%d/%m/%Y %H:%M:%S")
## Convert date
household_power_consumption$Date <- as.Date(household_power_consumption$Date, "%d/%m/%Y")
## Create working subset of the Original Data
workset <- subset(household_power_consumption, Date >= "2007-02-01" & Date <= "2007-02-02")
## Plot 1 - Global Active Power Histogram
png(file = "Plot1.png")
hist(as.numeric(workset$Global_active_power), col = "Red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", ylim= c(0,1200), cex.axis = 0.6, cex.lab = .7)
dev.off()
png(file = "Plot2.png")
plot(workset$DateTime, as.numeric(workset$Global_active_power), type = "n", ylab = "Global Active Power (kilowatts)", xlab = "", cex.axis = 0.8, cex.lab = .7)
lines(workset$DateTime, as.numeric(workset$Global_active_power))
dev.off()
png(file = "Plot3.png")
plot(workset$DateTime, as.numeric(workset$Sub_metering_1), type = "n", ylab = "Energy sub metering", xlab = "", cex.axis = 0.8, cex.lab = .7)
lines(workset$DateTime, as.numeric(workset$Sub_metering_1), col = "black")
lines(workset$DateTime, as.numeric(workset$Sub_metering_2), col = "red")
lines(workset$DateTime, as.numeric(workset$Sub_metering_3), col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),cex=.8, col=c("black","red", "blue"), lty=1)
dev.off()
png(file = "Plot4.png")
par(mfrow = c(2,2))
plot(workset$DateTime, as.numeric(workset$Global_active_power), type = "n", ylab = "Global Active Power (kilowatts)", xlab = "", cex.axis = 0.8, cex.lab = .7)
lines(workset$DateTime, as.numeric(workset$Global_active_power))
plot(workset$DateTime, as.numeric(workset$Voltage), type = "n", ylab = "Voltage", xlab = "datetime", cex.axis = 0.8, cex.lab = .7)
lines(workset$DateTime, as.numeric(workset$Voltage))
plot(workset$DateTime, as.numeric(workset$Sub_metering_1), type = "n", ylab = "Energy sub metering", xlab = "", cex.axis = 0.8, cex.lab = .7)
lines(workset$DateTime, as.numeric(workset$Sub_metering_1), col = "black")
lines(workset$DateTime, as.numeric(workset$Sub_metering_2), col = "red")
lines(workset$DateTime, as.numeric(workset$Sub_metering_3), col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),cex=.8, col=c("black","red", "blue"), lty=1)
plot(workset$DateTime, as.numeric(workset$Global_reactive_power), type = "n", ylab = "Global_reactive_power", xlab = "", cex.axis = 0.8, cex.lab = .7)
lines(workset$DateTime, as.numeric(workset$Global_reactive_power))
dev.off()
